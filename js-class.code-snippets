{
	"js-class": {
		"scope": "",
		"prefix": "!@js-class",
		"body": [
			"class Point {",
			"    x = 0;",
			"    y = 0;",
			"",
			"    constructor(x, y) {",
			"        this.x = x;",
			"        this.y = y;",
			"    }",
			"",
			"    getLength() {",
			"        let s = Math.pow(this.x, 2) + Math.pow(this.y, 2);",
			"        s = Math.sqrt(s);",
			"        return s;",
			"    }",
			"",
			"    getDistanceTo(p) {",
			"        let q = new Point(p.x - this.x, p.y - this.y);",
			"        return q.getLength();",
			"    }",
			"",
			"    getCenterTo(p) {",
			"        let center = new Point(this.x + p.x, this.y + p.y);",
			"        center.x /= 2;",
			"        center.y /= 2;",
			"        return center;",
			"    }",
			"",
			"    present() {",
			"        console.log(`(x: $${this.x}, y: $${this.y}) Length: $${this.getLength()}`);",
			"    }",
			"}",
			"",
			"class Pixel extends Point {",
			"    r = 0;",
			"    g = 0;",
			"    b = 0;",
			"    alpha = 0;",
			"",
			"    constructor(x, y, r, g, b, alpha) {",
			"        super(x, y);",
			"        this.x = x;",
			"        this.y = y;",
			"        this.r = r;",
			"        this.g = g;",
			"        this.b = b;",
			"        this.alpha = alpha;",
			"    }",
			"",
			"    present() {",
			"        let pr = '';",
			"",
			"        pr += `(x: $${this.x}, y: $${this.y}) `;",
			"        pr += 'Length: ' + this.getLength() + ' ';",
			"        pr += `RGB: ($${this.r}, $${this.g}, $${this.b}) `;",
			"        pr += 'ALPHA: ' + this.alpha;",
			"",
			"        console.log(pr);",
			"    }",
			"}"
		],
		"description": "Javascript class"
	}
}

{
	"py-backend": {
		"scope": "",
		"prefix": "!@py-backend",
		"body": [
			"#!path/to/your/python/executable/folder",
			"",
			"import cgi",
			"",
			"",
			"def add(x, y):",
			"    return x+y",
			"",
			"",
			"def mul(x, y):",
			"    return x*y",
			"",
			"# this function is called on success occasions",
			"def onSuccess(res):",
			"    r = '\"success\":\"true\", \"res\":\"{}\"'.format(res)",
			"    r = '{' + r + '}'",
			"    # ",
			"    # you could also use `json.dumps()` function",
			"    return r",
			"",
			"",
			"# this function is called on failure occasions",
			"def onFailure(err):",
			"    r = '\"success\":\"false\", \"err\":\"{}\"'.format(err)",
			"    r = '{' + r + '}'",
			"    return r",
			"",
			"",
			"# ",
			"# specifies that the return data type is a JSON string object",
			"print(\"Content-type: application/json\")",
			"",
			"",
			"# ",
			"# don't forget this line",
			"print()",
			"",
			"",
			"# acquire the `POST` parameters",
			"form = cgi.FieldStorage()",
			"x = form.getvalue(\"x\")",
			"y = form.getvalue(\"y\")",
			"func = form.getvalue(\"func\")",
			"z = 0",
			"",
			"try:",
			"    x = int(x)",
			"    y = int(y)",
			"    pass",
			"except Exception as ex:",
			"    print(onFailure('BAD PARAMETERS '))",
			"    pass",
			"else:",
			"    if(func == 'add'):",
			"        z = add(x, y)",
			"        print(onSuccess(z))",
			"    elif(func == 'mul'):",
			"        z = mul(x, y)",
			"        print(onSuccess(z))",
			"    else:",
			"        print(onFailure('UNSUPPORTED FUNCTION'))"
		],
		"description": "Python backend"
	}
}
